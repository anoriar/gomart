openapi: 3.0.3

info:
  title: Сервис Gophermart
  description: Система лояльности Gophermart
  version: 1.0.0

servers:
  - url: /

paths:
  /ping:
    get:
      description: Проверка жизнеспособности внутренних сервисов
      responses:
        200:
          description: Ping response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'

  /api/user/register:
    post:
      description: Регистрация пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'

      responses:
        200:
          description: пользователь успешно зарегистрирован и аутентифицирован
          headers:
            Authorization:
              description: Токен авторизации
              schema:
                type: string
                example: hdd8fh84t8if5h489rghe9jfisodjfpjerhgf4j0f
        400:
          description: неверный формат запроса
        409:
          description: логин уже занят
        500:
          description: внутренняя ошибка сервера

  /api/user/login:
    post:
      description: Аутентификация пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'

      responses:
        200:
          description: пользователь успешно аутентифицирован
          headers:
            Authorization:
              description: Токен авторизации
              schema:
                type: string
                example: hdd8fh84t8if5h489rghe9jfisodjfpjerhgf4j0f
        400:
          description: неверный формат запроса
        401:
          description: неверная пара логин/пароль
        500:
          description: внутренняя ошибка сервера

  /api/user/orders:
    post:
      description: Загрузка заказа
      security:
        - apiKey: []
      requestBody:
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/LoadOrderRequest'

      responses:
        200:
          description: заказ уже был загружен
        202:
          description: заказ успешно загружен
        400:
          description: неверный формат запроса
        401:
          description: пользователь не авторизован
        422:
          description: неверный формат номера заказа
        409:
          description: заказ загружен другим пользователем
        500:
          description: внутренняя ошибка сервера
    get:
      description: Заказы пользователя
      security:
        - apiKey: [ ]
      responses:
        200:
          description: успешная обработка запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersResponse'
        204:
          description: нет данных для ответа
        401:
          description: пользователь не авторизован
        500:
          description: внутренняя ошибка сервера

  /api/user/balance:
    get:
      description: Баланс пользователя
      security:
        - apiKey: [ ]
      responses:
        200:
          description: успешная обработка запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResponse'
        401:
          description: пользователь не авторизован
        500:
          description: внутренняя ошибка сервера

  /api/user/balance/withdraw:
    post:
      description: Списание баллов
      security:
        - apiKey: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawRequest'

      responses:
        200:
          description: заказ уже был загружен
        401:
          description: пользователь не авторизован
        422:
          description: неверный формат номера заказа
        402:
          description: на счету недостаточно средств
        500:
          description: внутренняя ошибка сервера

  /api/user/withdrawals:
    get:
      description: Получение информации о выводе средств
      security:
        - apiKey: [ ]
      responses:
        200:
          description: успешная обработка запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalsResponse'
        204:
          description: нет данных для ответа
        401:
          description: пользователь не авторизован
        500:
          description: внутренняя ошибка сервера

components:
  schemas:
    UserRegisterRequest:
      type: object
      properties:
        login:
          type: string
          example: test@gmail.com
        password:
          type: string
          example: rj94th9ro

    UserLoginRequest:
      type: object
      properties:
        login:
          type: string
          example: test@gmail.com
        password:
          type: string
          example: rj94th9ro

    LoadOrderRequest:
      type: string
      example: 123456782

    WithdrawRequest:
      type: object
      properties:
        order:
          type: string
          example: 2377225624
        sum:
          type: number
          example: 55.34

    PingResponse:
      type: object
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceStatus'


    ServiceStatus:
      type: object
      properties:
        name:
          type: string
          example: "Database"
        status:
          type: string
          enum:
            - OK
            - Fail
          example: OK
        error:
          type: string
          nullable: true
          example: null

    OrdersResponse:
      type: array
      items:
        $ref: '#/components/schemas/Order'

    BalanceResponse:
      type: object
      properties:
        current:
          type: number
          description: текущий баланс пользователя
          example: 500.5
        withdrawn:
          type: number
          description: сумма использованных баллов
          example: 200.2

    WithdrawalsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Withdrawal'

    Order:
      type: object
      properties:
        number:
          type: string
          description: ID заказа
          example: "9278923470"
        status:
          type: string
          description: Статус
          enum:
            - NEW
            - PROCESSING
            - INVALID
            - PROCESSED
          example: PROCESSED
        accrual:
          type: number
          description: Количество начисленных баллов
          example: 500.30
        uploaded_at:
          type: string
          description: Дата загрузки заказа в формате RFC3339
          example: 2020-12-10T15:15:45+03:00

    Withdrawal:
      type: object
      properties:
        order:
          type: string
          description: ID заказа
          example: "9278923470"
        sum:
          type: number
          description: Количество списанных баллов
          example: 500.30
        processed_at:
          type: string
          description: Дата списания в формате RFC3339
          example: 2020-12-10T15:15:45+03:00

  securitySchemes:
    apiKey:
      type: apiKey
      name: Authorization
      in: header