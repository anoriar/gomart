openapi: 3.0.3

info:
  title: Сервис Gophermart
  description: Система лояльности Gophermart
  version: 1.0.0

servers:
  - url: /

paths:
  /ping:
    get:
      description: Проверка жизнеспособности внутренних сервисов
      responses:
        200:
          description: Ping response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'

  /api/user/register:
    post:
      description: Регистрация пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'

      responses:
        200:
          description: пользователь успешно зарегистрирован и аутентифицирован
          headers:
            Authorization:
              description: Токен авторизации
              schema:
                type: string
                example: hdd8fh84t8if5h489rghe9jfisodjfpjerhgf4j0f
        400:
          description: неверный формат запроса
        409:
          description: логин уже занят
        500:
          description: внутренняя ошибка сервера

  /api/user/login:
    post:
      description: Аутентификация пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'

      responses:
        200:
          description: пользователь успешно аутентифицирован
          headers:
            Authorization:
              description: Токен авторизации
              schema:
                type: string
                example: hdd8fh84t8if5h489rghe9jfisodjfpjerhgf4j0f
        400:
          description: неверный формат запроса
        401:
          description: неверная пара логин/пароль
        500:
          description: внутренняя ошибка сервера


components:
  schemas:
    UserRegisterRequest:
      type: object
      properties:
        login:
          type: string
          example: test@gmail.com
        password:
          type: string
          example: rj94th9ro

    UserLoginRequest:
      type: object
      properties:
        login:
          type: string
          example: test@gmail.com
        password:
          type: string
          example: rj94th9ro

    PingResponse:
      type: object
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceStatus'


    ServiceStatus:
      type: object
      properties:
        name:
          type: string
          example: "Database"
        status:
          type: string
          enum:
            - OK
            - Fail
          example: OK
        error:
          type: string
          nullable: true
          example: null