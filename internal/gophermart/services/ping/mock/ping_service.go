// Code generated by MockGen. DO NOT EDIT.
// Source: ping_service_interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	ping "github.com/anoriar/gophermart/internal/gophermart/dto/responses/ping"
	gomock "github.com/golang/mock/gomock"
)

// MockPingServiceInterface is a mock of PingServiceInterface interface.
type MockPingServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPingServiceInterfaceMockRecorder
}

// MockPingServiceInterfaceMockRecorder is the mock recorder for MockPingServiceInterface.
type MockPingServiceInterfaceMockRecorder struct {
	mock *MockPingServiceInterface
}

// NewMockPingServiceInterface creates a new mock instance.
func NewMockPingServiceInterface(ctrl *gomock.Controller) *MockPingServiceInterface {
	mock := &MockPingServiceInterface{ctrl: ctrl}
	mock.recorder = &MockPingServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPingServiceInterface) EXPECT() *MockPingServiceInterfaceMockRecorder {
	return m.recorder
}

// Ping mocks base method.
func (m *MockPingServiceInterface) Ping() ping.PingResponseDto {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register")
	ret0, _ := ret[0].(ping.PingResponseDto)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockPingServiceInterfaceMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockPingServiceInterface)(nil).Ping))
}
